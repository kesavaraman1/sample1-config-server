buildscript {
    ext {
        springBootVersion = '2.1.5.RELEASE'
        springCloudVersion = '2.1.1.RELEASE'
    }
    repositories {
        mavenLocal()
        maven {
            url "${artifactory_url}/plugins-release"
            credentials {
                username = "${artifactory_user}"
                password = "${artifactory_password}"
            }
        }
    }
    dependencies {
        classpath("io.franzbecker:gradle-lombok:4.0.0")
        classpath("org.jfrog.buildinfo:build-info-extractor-gradle:4.13.0")
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("com.kesav.kesav.gradle:kesav-gradle-sonarqube:[1.0.0,1.1.0-a1)")
        classpath("com.kesav.kesav.gradle:kesav-gradle-serviceinfo:[1.0.0,1.1.0-a1)")
        classpath("com.kesav.kesav.gradle:kesav-gradle-test-functional:[1.0.0,1.1.0-a1)")
        classpath("com.kesav.kesav.gradle:kesav-gradle-test-contract:[1.2.0,1.3.0-a1)")
        classpath("com.kesav.kesav.gradle:kesav-gradle-test-e2e:[1.1.0,1.2.0-a1)")

        // Remove this line if you are not building in GoCD
        classpath("com.kesav.esp.gradle:artifact-task:[0.0.0,0.1.0)")

    }
}

plugins {
    id 'java'
    id 'eclipse'
    id 'idea'
    id 'maven'
    id 'maven-publish'
    id 'project-report'
    id "com.github.ManifestClasspath" version "0.1.0-RELEASE"
}

apply plugin: "io.franzbecker.gradle-lombok"
apply plugin: 'com.jfrog.artifactory'
apply plugin: 'org.springframework.boot'
apply plugin: 'kesav.gradle.sonarqube'
apply plugin: 'kesav.gradle.serviceinfo'
apply plugin: 'kesav.gradle.test.functional'
apply plugin: 'kesav.gradle.test.contract'
apply plugin: 'kesav.gradle.test.e2e'
// Remove the ArtifactTaskPlugin if you are not building in GoCD
apply plugin: com.kesav.esp.gradle.ArtifactTaskPlugin

eclipse {
    classpath {
        downloadSources = true
        downloadJavadoc = true
    }
}

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

group = 'com.kesav.kesav'
version = '1.0.0'
sourceCompatibility = 1.8
targetCompatibility = 1.8
compileJava.options.encoding = 'UTF-8'


jar {
    baseName = 'psnb'
    version = version
    doFirst {
        manifest {
            attributes(
                'Implementation-Title': baseName,
                'Implementation-Version': version,
                'Implementation-Vendor': 'kesav Corp.',
                'Specification-Title': 'kesav Cloud Framework',
                'Specification-Version': '4.0.0',
                'Specification-Vendor': 'kesav Core Team',
                'Class-Path': manifestClassPath
            )
        }
    }
}

bootRun {
    main = "com.kesav.kesav.psnb.PowersupplynotebookApplication"
    sourceResources sourceSets.main
    systemProperties = System.properties
    jvmArgs = ["-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005"]
}

springBoot {
    buildInfo()
}

dependencies {
    compile("com.kesav.kesav:kesav-boot:4.2.0")
    compile('org.springframework.boot:spring-boot-starter')
    compile ('org.springdoc:springdoc-openapi-ui:1.1.49')
    compile ("org.springframework.boot:spring-boot-starter-data-jpa:${springBootVersion}")
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-mongodb', version: "${springBootVersion}"
    //compile ('org.springframework.boot:spring-boot-starter-data-jpa:2.1.8.RELEASE')
    compile('com.oracle:ojdbc7:12.1.0.2')
    compile('org.hibernate:hibernate-core:5.2.11.Final')
    compile('org.hibernate:hibernate-entitymanager:5.2.11.Final')
    compile('com.kesav.cable.se.device.poller:device-poller-client:0.20')
	compile group: 'com.amazonaws', name: 'amazon-kinesis-client', version: '1.13.0'
    compile('software.amazon.kinesis:amazon-kinesis-client:2.2.8')
	compile group: 'commons-fileupload', name: 'commons-fileupload', version: '1.4'
	compile('org.apache.avro:avro:1.8.2')
	compile group: 'org.javers', name: 'javers-core', version: '3.5.0'
    compile("org.springframework.boot:spring-boot-starter-actuator:${springBootVersion}")
    compile('io.micrometer:micrometer-registry-prometheus:1.5.4')
    compile("org.springframework.cloud:spring-cloud-starter-netflix-eureka-client:${springCloudVersion}")
    compile('org.springframework.kafka:spring-kafka:2.2.0.RELEASE')
    compile group: 'net.javacrumbs.shedlock', name: 'shedlock-provider-jdbc-template', version: '4.21.0'
	compile group: 'net.javacrumbs.shedlock', name: 'shedlock-spring', version: '4.21.0'

    implementation 'de.codecentric:spring-boot-admin-starter-client:2.1.5'
    implementation group: 'org.apache.pdfbox', name: 'pdfbox', version: '2.0.1'

    testCompile("org.springframework.boot:spring-boot-starter-test:${springBootVersion}")
    testCompile("org.assertj:assertj-core:3.14.0")
    testCompile("org.mockito:mockito-core:2.28.2")
    testCompile("org.powermock:powermock-core:2.0.4")
    testCompile("org.powermock:powermock-api-mockito2:2.0.4")
    testCompile("org.powermock:powermock-module-junit4:2.0.4")
    testCompile("net.javacrumbs.json-unit:json-unit-assertj:2.11.1")
	runtimeOnly('com.h2database:h2:1.4.199')

}

repositories {
	mavenLocal()
}

artifactory {
	contextUrl = "${artifactory_url}"
	resolve {
		repository {
			repoKey = 'libs-release'
			username = "${artifactory_user}"
			password = "${artifactory_password}"
			maven = true
		}
	}
}

sonarqube {
    properties {
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.exclusions", "**/*Test*.java,**/nwt.persistence/**,**/config/**,**/constants/**,**/domains/**,**/clients.rest/**,**/persistence/**,**/exceptions/**,**/utils/**"
    }
}


task wrapper(type: Wrapper) {
	gradleVersion = '4.9'
}
